<spring:beans xmlns="http://membrane-soa.org/proxies/1/"
			  xmlns:spring="http://www.springframework.org/schema/beans"
			  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
					    http://membrane-soa.org/proxies/1/ http://membrane-soa.org/schemas/proxies-1.xsd">

	<!-- this is a Java string object defined as a spring bean. It serves as value for the X-Javascript header -->
	<spring:bean name="mySpringBean" class="java.lang.String">
		<spring:constructor-arg value="Javascript interceptor"/>
	</spring:bean>

	<router>

		<!-- This service proxy adds a custom header to the request and logs all response headers with help of Javascript interceptors -->
		<serviceProxy name="Javascript header" port="2000">
			<request>
				<javascript>
					var value = spring.getBean('mySpringBean');
					<!-- the X-Javascript header is added -->
					exc.getRequest().getHeader().add("X-Javascript", value);
					print("X-Javascript header added with value: " + value);
					CONTINUE;
				</javascript>
			</request>
			<response>
				<javascript>
					print("Response headers:");
					<!-- all headers are printed to the console -->
					var headerFields = exc.getResponse().getHeader().getAllHeaderFields();
					for(i=0; i &lt; headerFields.length;i++){
						print(headerFields[i]);
					}
					CONTINUE;
				</javascript>
			</response>
			<target host="membrane-soa.org" port="80" />
		</serviceProxy>

		<!-- this service proxy responds with a custom message generated by the Javascript interceptor -->
		<serviceProxy name="Javascript hello" port="2001">
			<request>
				<javascript>
					exc.setResponse(Response.ok("---Hello from Javascript interceptor!---").build());
					RETURN;
				</javascript>
			</request>

			<target host="membrane-soa.org" port="80" />
		</serviceProxy>

		<!-- open the admin console on http://localhost:9000 and have a look at the interceptors -->
		<serviceProxy port="9000">
			<adminConsole/>
		</serviceProxy>

	</router>

</spring:beans>
